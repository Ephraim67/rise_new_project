# Generated by Django 4.2.7 on 2024-12-24 12:27

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('is_combined', models.BooleanField(default=False)),
                ('combined_group_id', models.UUIDField(null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('submitted', 'Submitted'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Recharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposits', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Deposit',
                'verbose_name_plural': 'Deposits',
                'db_table': 'deposits',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='VIPLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField(unique=True)),
                ('min_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('max_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('single_product_percentage', models.DecimalField(decimal_places=2, max_digits=4)),
                ('combined_product_percentage', models.DecimalField(decimal_places=2, max_digits=4)),
                ('products_per_section', models.PositiveIntegerField()),
                ('min_profit_range', models.DecimalField(decimal_places=2, max_digits=15)),
                ('max_profit_range', models.DecimalField(decimal_places=2, max_digits=15)),
            ],
        ),
        migrations.CreateModel(
            name='Withdrawal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('users', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Withdrawal',
                'verbose_name_plural': 'Withdrawals',
                'db_table': 'withdrawals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WithdrawalTransactionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('rejected', 'Rejected')], max_length=20)),
                ('transaction_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='withdrawal_transactions', to=settings.AUTH_USER_MODEL)),
                ('withdrawal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_records', to='product_account_transaction.withdrawal')),
            ],
            options={
                'verbose_name': 'Withdrawal Transaction Record',
                'verbose_name_plural': 'Withdrawal Transaction Records',
                'db_table': 'withdrawal_transaction_records',
                'ordering': ['-transaction_time'],
            },
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product', models.ManyToManyField(to='product_account_transaction.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submission', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RechargeTransactionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed')], max_length=20)),
                ('transaction_time', models.DateTimeField(auto_now_add=True)),
                ('deposit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_records', to='product_account_transaction.recharge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='deposit_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Deposit Transaction Record',
                'verbose_name_plural': 'Deposit Transaction Records',
                'db_table': 'deposit_transaction_records',
                'ordering': ['-transaction_time'],
            },
        ),
        migrations.CreateModel(
            name='ProductTransactionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('submitted', 'Submitted'), ('completed', 'Completed')], max_length=20)),
                ('transaction_time', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_records', to='product_account_transaction.product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Product Transaction Record',
                'verbose_name_plural': 'Product Transaction Records',
                'db_table': 'product_transaction_records',
                'ordering': ['-transaction_time'],
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('frozen_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('cumulative_withdrawal', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('profit_earned', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total profit earned by the user', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('is_pending', models.BooleanField(default=False, help_text='Indicates if account is pending due to negative balance or no clicks remaining')),
                ('negative_threshold', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Minimum balance threshold before account goes pending', max_digits=15)),
                ('click_remaining', models.IntegerField(default=0, help_text='Number of clicks remaining for the user', validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='balance', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Balance',
                'verbose_name_plural': 'User Balances',
                'db_table': 'user_balances',
            },
        ),
    ]
